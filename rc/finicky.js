// Generated by Finicky Kickstart
// Save as ~/.finicky.js

module.exports = {
  defaultBrowser: "Google Chrome",
  handlers: [
    {
      match: /^https?:\/\/github\.com\/.*\/headscale\/.*$/,
      browser: "Safari"
    },
    {
      match: finicky.matchHostnames([
        "youtube.com",
        "*.youtube.com",
        "youtu.be",
        "*.youtu.be",
      ]),
      browser: "Firefox"
    },
    {
      match: finicky.matchHostnames([
        "proton.com",
        "*.proton.com",
        "protonmail.com",
        "*.protonmail.com",
        "proton.me",
        "*.proton.me",
      ]),
      browser: "Safari"
    },
    {
      match: finicky.matchHostnames([
        "discord.gg",
        "*.discord.gg",
        "discordapp.com",
        "*.discordapp.com",
        "discord.com",
        "*.discord.com",
        "discordcdn.com",
        "*.discordcdn.com",
      ]),
      browser: "Safari"
    },
    {
      match: finicky.matchHostnames(["sandefjordfiber.no", "*.sandefjordfiber.no"]),
      browser: "Safari"
    },
    {
      // osascript -e 'id of app "ChatGPT"'
      match: ({ opener }) =>
        ["com.hnc.Discord", "com.anthropic.claudefordesktop", "com.openai.chat"].includes(opener.bundleId),
      browser: "Safari"
    }
  ]
  ,
  rewrite: [{
    match: () => true, // Execute rewrite on all incoming urls to make this example easier to understand
    url: ({ url }) => {
      const removeKeysStartingWith = ["utm_", "uta_"]; // Remove all query parameters beginning with these strings
      const removeKeys = ["fbclid", "gclid"]; // Remove all query parameters matching these keys

      const search = url.search
        .split("&")
        .map((parameter) => parameter.split("="))
        .filter(([key]) => !removeKeysStartingWith.some((startingWith) => key.startsWith(startingWith)))
        .filter(([key]) => !removeKeys.some((removeKey) => key === removeKey));

      return {
        ...url,
        search: search.map((parameter) => parameter.join("=")).join("&"),
      };
    },
  }]
}
