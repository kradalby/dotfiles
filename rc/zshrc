#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

#Aliases
alias update_dotfiles="cd ~/git/dotfiles; git pull; cd -"
alias tb="nc termbin.com 9999"
alias cm="curl --silent http://whatthecommit.com/index.txt"
alias fuck='sudo $(history -p \!\!)'


#Functions
push () {
    git add .
    git commit -m "$(cm)"
    git push origin $(git rev-parse --abbrev-ref HEAD)
}

pullall () {
    for dir in *
    do
        echo $dir
        cd $dir
        git pull origin $(git rev-parse --abbrev-ref HEAD)
        cd ..
    done
}

cp_p()
{
   strace -q -ewrite cp -- "${1}" "${2}" 2>&1 \
      | awk '{
        count += $NF
            if (count % 10 == 0) {
               percent = count / total_size * 100
               printf "%3d%% [", percent
               for (i=0;i<=percent;i++)
                  printf "="
               printf ">"
               for (i=percent;i<100;i++)
                  printf " "
               printf "]\r"
            }
         }
         END { print "" }' total_size=$(stat -c '%s' "${1}") count=0
}

swap()
{
    tmp=`mktemp`
    mv $1 $tmp
    mv $2 $1
    mv $tmp $2
}

compile-ssh()
{
    SSH_CONFIG=~/git/dotfiles/ssh/config
    SSH_MODULE_CONFIGS=~/git/dotfiles/ssh/config.d
    rm -rf $SSH_CONFIG
    cat $SSH_MODULE_CONFIGS/* > $SSH_CONFIG
    cat $SSH_CONFIG
}

rmkh () {
    sed -i $1'd' ~/.ssh/known_hosts
}

if [[ "$OSTYPE" == darwin* ]];
then
    
    vnc () {
        re='^[0-9]+$'
        if [[ $1 =~ $re ]] ; then
            open vnc://localhost:$1
        else
            open vnc://$1:$2
        fi

    }

    socks () {
        help="Usage: eth or wlan, on or off"
        if [[ $1 =  "eth" ]]; then
            if [[ $2 = "on" ]]; then
                sudo networksetup -setsocksfirewallproxystate "Thunderbolt Ethernet" on
            elif [[ $2 = "off" ]]; then
                sudo networksetup -setsocksfirewallproxystate "Thunderbolt Ethernet" off
            else
                echo $help
            fi
        elif [[ $1 = "wlan" ]]; then    
            if [[ $2 = "on" ]]; then
                sudo networksetup -setsocksfirewallproxystate "Wi-Fi" on
            elif [[ $2 = "off" ]]; then
                sudo networksetup -setsocksfirewallproxystate "Wi-Fi" off
            else
                echo $help
            fi
        else
            echo $help
        fi
    }

    ip () {
        for i in $(seq 0 $(ifconfig | grep en.: | wc -l))
        do
            echo "en$i: $(ipconfig getifaddr en$i)"
        done
    }

fi

if [ -f /usr/local/bin/virtualenvwrapper.sh ];
then
    source /usr/local/bin/virtualenvwrapper.sh
fi

